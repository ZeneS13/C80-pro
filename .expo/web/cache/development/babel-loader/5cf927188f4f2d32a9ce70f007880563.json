{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sango\\\\OneDriveXX\\\\Documents\\\\whjr\\\\C81\\\\PRO-C80-main\\\\PRO-C80-master\\\\PRO-C80-master\\\\C80-Project-master\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport { ListItem } from 'react-native-elements';\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.getRequestedThingsList = function () {\n      _this.requesteRef = db.collection('requested_things').onSnapshot(function (snapshot) {\n        var requestedThingsList = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          requestedThingsList: requestedThingsList\n        });\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        title: item.thing_name,\n        subtitle: item.reason_to_request,\n        titleStyle: {\n          color: '#000',\n          fontWeight: 'bold'\n        },\n        rightElement: React.createElement(TouchableOpacity, {\n          style: styles.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }, \"Exchange\")),\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this.state = {\n      requestedThingsList: []\n    };\n    _this.requesteRef = null;\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRequestedThingsList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Exhange Things\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }), this.state.requestedThingsList.length === 0 ? React.createElement(View, {\n        style: {\n          flex: 1,\n          fontSize: 20,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"List of all requests\")) : React.createElement(FlatList, {\n        keyExtractor: this.keyExtractor,\n        data: this.state.requestedThingsList,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    width: 100,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ff5722',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/sango/OneDriveXX/Documents/whjr/C81/PRO-C80-main/PRO-C80-master/PRO-C80-master/C80-Project-master/screens/HomeScreen.js"],"names":["React","MyHeader","db","ListItem","HomeScreen","getRequestedThingsList","requesteRef","collection","onSnapshot","snapshot","requestedThingsList","docs","map","doc","data","setState","keyExtractor","item","index","toString","renderItem","i","thing_name","reason_to_request","color","fontWeight","styles","button","state","flex","length","fontSize","justifyContent","alignItems","Component","StyleSheet","create","width","height","backgroundColor","shadowOffset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, StyleSheet, FlatList, TouchableOpacity} from 'react-native';\nimport MyHeader from '../components/MyHeader';\nimport db from '../config';\nimport { ListItem } from 'react-native-elements';\n\nexport default class HomeScreen extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            requestedThingsList: []\n        } \n        this.requesteRef = null;\n    }\n\n    getRequestedThingsList = () => {\n        this.requesteRef = db.collection('requested_things')\n        .onSnapshot((snapshot) => {\n            var requestedThingsList = snapshot.docs.map((doc) => doc.data());\n            \n            this.setState({\n                requestedThingsList: requestedThingsList\n            })\n        });\n    }\n\n    componentDidMount() {\n        this.getRequestedThingsList();\n    }\n\n    keyExtractor = (item, index) => index.toString();\n\n    renderItem = ({item, i}) => {\n        return (\n            <ListItem \n                key={i}\n                title={item.thing_name}\n                subtitle={item.reason_to_request}\n                titleStyle={{color: '#000', fontWeight: 'bold'}}\n                rightElement={\n                    <TouchableOpacity style={styles.button}>\n                        <Text style={{color: '#fff'}}>Exchange</Text>\n                    </TouchableOpacity>\n                }\n                bottomDivider\n            />\n        )\n    }\n\n    render() {\n        return (\n            <View style={{flex: 1}}>\n                <MyHeader title=\"Exhange Things\" />\n                {this.state.requestedThingsList.length === 0 ? (\n                    <View style={{flex: 1, fontSize: 20, justifyContent: 'center', alignItems: 'center'}}>\n                        <Text style={{fontSize: 20}}>List of all requests</Text>\n                    </View>\n                ): (\n                    <FlatList \n                        keyExtractor={this.keyExtractor}\n                        data={this.state.requestedThingsList}\n                        renderItem={this.renderItem}\n                    />\n                )}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        width: 100,\n        height: 30,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#ff5722',\n        shadowOffset: {\n            width: 0,\n            height: 8\n        }\n    }\n});"]},"metadata":{},"sourceType":"module"}